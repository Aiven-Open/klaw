name: transition ticket

on:
  issues:
    types: [labeled]

jobs:
  transition_ticket_in_progress:
    runs-on: ubuntu-latest      
    if: ${{ github.event.label.name == 'in progress'}}
    steps:
      - name: Wait for ticket to be created
        continue-on-error: true
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          check-name: 'Create ticket'
          repo-token: ${{ github.token }}
          wait-interval: 10
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner.
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed

      - name: ticket_num
        run: |
          output=$(python .github/workflows/ticket_number.py "${{ github.event.issue.title }}")
          echo "::set-output name=ticket::$output"
        id: ticket_extraction
      - name: Print ticket number
        run: echo "${{ steps.ticket_extraction.outputs.ticket }}"

      - name: adjust_secret_key
        id: adjust_secret_key
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.actor }}
      - name: print secret key
        run: echo ${{ steps.adjust_secret_key.outputs.uppercase }}

      - name: adjust_github_name
        id: adjust_github_name
        run: |
          output=$(python .github/workflows/fix_githubname.py ${{ steps.adjust_secret_key.outputs.uppercase }})
          echo "::set-output name=githubsecret::$output"
      - name: print adjusted secret key
        run: echo ${{ steps.adjust_github_name.outputs.githubsecret }}

      - name: user_email
        env:
          USER_DATA: ${{ secrets[format('{0}', steps.adjust_github_name.outputs.githubsecret)] }}
        run: |
          output=$(python .github/workflows/jira_login.py '''email''')
          echo "::set-output name=email::$output"
        id: email_extraction
      - name: Print email
        run: echo "${{ steps.email_extraction.outputs.email }}"

      - name: user_token
        env:
          USER_DATA: ${{ secrets[format('{0}', steps.adjust_github_name.outputs.githubsecret)] }}
        run: |
          output=$(python .github/workflows/jira_login.py '''token''')
          echo "::set-output name=token::$output"
        id: token_extraction
      - name: Print token
        run: echo "${{ steps.token_extraction.outputs.token }}"

      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: https://aiven.atlassian.net
          JIRA_USER_EMAIL: ${{ steps.email_extraction.outputs.email }}
          JIRA_API_TOKEN: ${{ steps.token_extraction.outputs.token }}

      - name: Transition issue
        id: transition
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.ticket_extraction.outputs.ticket }}
          transition: "In progress"    

  transition_ticket_waiting_for_up_stream:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'waiting for upstream'}}
    steps:
      - name: Wait for ticket to be created
        continue-on-error: true
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          check-name: 'Create ticket'
          repo-token: ${{ github.token }}
          wait-interval: 10

      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner.
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
          
      - name: ticket_num
        run: |
          output=$(python .github/workflows/ticket_number.py "${{ github.event.issue.title }}")
          echo "::set-output name=ticket::$output"
        id: ticket_extraction
      - name: Print ticket number
        run: echo "${{ steps.ticket_extraction.outputs.ticket }}"

      - name: adjust_secret_key
        id: adjust_secret_key
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.actor }}
      - name: print secret key
        run: echo ${{ steps.adjust_secret_key.outputs.uppercase }}


      - name: adjust_github_name
        id: adjust_github_name
        run: |
          output=$(python .github/workflows/fix_githubname.py ${{ steps.adjust_secret_key.outputs.uppercase }})
          echo "::set-output name=githubsecret::$output"
      - name: print adjusted secret key
        run: echo ${{ steps.adjust_github_name.outputs.githubsecret }}

      - name: user_email
        env:
          USER_DATA: ${{ secrets[format('{0}', steps.adjust_github_name.outputs.githubsecret)] }}
        run: |
          output=$(python .github/workflows/jira_login.py '''email''')
          echo "::set-output name=email::$output"
        id: email_extraction
      - name: Print email
        run: echo "${{ steps.email_extraction.outputs.email }}"

      - name: user_token
        env:
          USER_DATA: ${{ secrets[format('{0}', steps.adjust_github_name.outputs.githubsecret)] }}
        run: |
          output=$(python .github/workflows/jira_login.py '''token''')
          echo "::set-output name=token::$output"
        id: token_extraction
      - name: Print token
        run: echo "${{ steps.token_extraction.outputs.token }}"


      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: https://aiven.atlassian.net
          JIRA_USER_EMAIL: ${{ steps.email_extraction.outputs.email }}
          JIRA_API_TOKEN: ${{ steps.token_extraction.outputs.token }}

      - name: Transition issue
        id: transition
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.ticket_extraction.outputs.ticket }}
          transition: "waiting for upstream release"      

  transition_ticket_selected_for_dev:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'selected for development'}}
    steps:
      - name: Wait for ticket to be created
        continue-on-error: true
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          check-name: 'Create ticket'
          repo-token: ${{ github.token }}
          wait-interval: 10


      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner.
        
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed

      - name: ticket_num
        run: |
          output=$(python .github/workflows/ticket_number.py "${{ github.event.issue.title }}")
          echo "::set-output name=ticket::$output"
        id: ticket_extraction
      - name: Print ticket number
        run: echo "${{ steps.ticket_extraction.outputs.ticket }}"

      - name: adjust_secret_key
        id: adjust_secret_key
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.actor }}
      - name: print secret key
        run: echo ${{ steps.adjust_secret_key.outputs.uppercase }}


      - name: adjust_github_name
        id: adjust_github_name
        run: |
          output=$(python .github/workflows/fix_githubname.py ${{ steps.adjust_secret_key.outputs.uppercase }})
          echo "::set-output name=githubsecret::$output"
      - name: print adjusted secret key
        run: echo ${{ steps.adjust_github_name.outputs.githubsecret }}


      - name: user_email
        env:
          USER_DATA: ${{ secrets[format('{0}', steps.adjust_github_name.outputs.githubsecret)] }}
        run: |
          output=$(python .github/workflows/jira_login.py '''email''')
          echo "::set-output name=email::$output"
        id: email_extraction
      - name: Print email
        run: echo "${{ steps.email_extraction.outputs.email }}"

      - name: user_token
        env:
          USER_DATA: ${{ secrets[format('{0}', steps.adjust_github_name.outputs.githubsecret)] }}
        run: |
          output=$(python .github/workflows/jira_login.py '''token''')
          echo "::set-output name=token::$output"
        id: token_extraction
      - name: Print token
        run: echo "${{ steps.token_extraction.outputs.token }}"


      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: https://aiven.atlassian.net
          JIRA_USER_EMAIL: ${{ steps.email_extraction.outputs.email }}
          JIRA_API_TOKEN: ${{ steps.token_extraction.outputs.token }}

      - name: Transition issue
        id: transition
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.ticket_extraction.outputs.ticket }}
          transition: "Selected for Development"       

