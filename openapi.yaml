openapi: 3.0.3
info:
  title: Klaw - OpenAPI
  version: 1.0.0
  description: >
    This specification is still a work in progess and is not yet implemented in any API. The purpose of this specification is to facilitate developers discussions.
  contact:
    email: info@klaw-project.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Klaw documentation
  url: https://www.klaw-project.io/docs
tags:
  - name: User
    description: User API endpoints
  - name: Topic
    description: Topic operations
  - name: Team
    description: Team operations
  - name: Environment
    description: Environment operations
paths:
  /user/authenticate:
    summary: User authentication
    description: User can authenticate themselves with their username and password
    post:
      operationId: userAuthentication
      summary: Authenticate user
      description: >
        Exchange username and password to an authentication token.
        The token can be later used as authentication mechanism for other API endpoints.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuthenticationRequest"
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthenticationResponse"
        "403":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                message: Username and password did not match
  /getTopics:
    get:
      operationId: topicsGet
      summary: Get topics
      tags:
        - Topic
      parameters:
        - in: query
          name: env
          required: true
          description: The value should be either an environment identifier or "ALL".
          schema:
            type: string
          example: "ALL"
        - in: query
          name: pageNo
          required: true
          schema:
            type: string
          example: "1"
        - in: query
          name: currentPage
          required: false
          schema:
            type: string
          example: "1"
        - in: query
          name: topicnamesearch
          required: false
          schema:
            type: string
          example: searchTerm
        - in: query
          name: teamName
          required: false
          schema:
            type: string
          example: application-X-developers
        - in: query
          name: topicType
          required: false
          schema:
            type: string
            enum: ["Producer", "Consumer"]
          example: "Producer"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicsGetResponse"
  /getTopicsOnly:
    get:
      operationId: topicsGetOnly
      summary: Get topic names list
      tags:
        - Topic
      parameters:
        - name: isMyTeamTopics
          in: query
          required: false
          description: Set to true to only get the topic names for topics belonging to the team of the current user
          schema:
            $ref: "#/components/schemas/TopicsGetOnlyResponse"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /createTopics:
    post:
      operationId: topicCreate
      summary: Create topic request
      tags:
        - Topic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/topicCreateRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericApiResponse"
  /getAdvancedTopicConfigs:
    get:
      operationId: topicAdvancedConfigGet
      summary: Get advanced topic configuration options
      tags:
        - Topic
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/topicAdvancedConfigGetResponse"
  /getAllTeamsSUOnly:
    get:
      operationId: teamNamesGet
      summary: Get team names
      tags:
        - Team
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamNamesGetResponse"
  /getEnvs:
    get:
      operationId: environmentsGet
      summary: Get environments
      tags:
        - Environment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Environment"
  /getEnvsBaseClusterFilteredForTeam:
    get:
      operationId: getEnvsBaseClusterFilteredForTeam
      summary: Get environments
      tags:
        - Environment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Environment"
components:
  schemas:
    CommonError:
      type: object
      properties:
        message:
          title: message
          description: Description for user why a certain operation failed
          type: string
    GenericApiResponse:
      title: GenericApiResponse
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        timestamp:
          title: Timestamp
          type: string
          format: date-time
          example: 2018-11-13T20:20:39+00:00
        message:
          type: string
        debugMessage:
          type: string
        result:
          type: string
        data:
          type: object
    UserAuthenticationRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          title: username
          description: Username
          example: john.doe@klaw-project.io
        password:
          title: password
          type: string
          example: password123
    UserAuthenticationResponse:
      type: object
      required:
        - token
        - tokenType
      properties:
        token:
          title: token
          description: Klaw authentication token
          type: string
          minLength: 256
          maxLength: 2048
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        tokenType:
          title: Token type
          example: JWT
          type: string
          enum: [JWT]
    TopicsGetResponse:
      type: array
      items:
        type: array
        items:
          $ref: "#/components/schemas/TopicInfo"
    TopicsGetOnlyResponse:
      type: array
      items:
        type: string
      example: ["myTopic", "otherTopic"]
    TopicInfo:
      type: object
      additionalProperties: false
      properties:
        topicid:
          title: Topic identifier
          description: This identifier is used in Klaw metadata store to ensure uniquenes.
          type: integer
          format: int32
          example: 1010
        totalNoPages:
          title: Total number of pages
          type: string
          example: "1"
        currentPage:
          title: Current page number
          type: string
          example: "1"
        allPageNos:
          title: All page numbers
          description: List of all page numbers
          type: array
          items:
            type: string
          example: ["1"]
        topicName:
          title: Topic name
          description: Kafka Topic name
          type: string
          example: "topicName"
        noOfPartitions:
          title: Number of partitions
          description: Topic partition count
          type: integer
          format: int32
          example: 10
        description:
          title: Description
          description: Kafka topic description stored in Klaw metadata.
          type: string
          example: "Main PostgreSQL change data capture stream"
        documentation:
          title: Documentation
          deprecated: true
          nullable: true
          type: string
        noOfReplicas:
          title: Number of replicas
          description: Topic replica count
          type: string
          example: "2"
        sequence:
          title: Sequence
          type: string
          deprecated: true
        teamname:
          title: Team name
          description: Topic owner team name
          type: string
          example: application-X-developers
        cluster:
          title: cluster
          deprecated: true
          type: string
          example: "1"
        clusterId:
          title: Cluster identifier
          type: string
          deprecated: true
          nullable: true
        environmentsList:
          title: Environments list
          description: List of environments where the topic is present.
          type: array
          items:
            title: Environment name
            example: TEST
            type: string
          example: ["DEV", "TEST"]
        showEditTopic:
          title: Show edit topic
          description: Describes if the user should see topic edit action.
          type: boolean
          example: false
        showDeleteTopic:
          title: Show delete topic
          description: Describes if the user should see topic delete action.
          type: boolean
          example: true
        topicDeletable:
          title: Topic deletable
          description: Describes if the topic can be deleted.
          example: true
          type: boolean
      required:
        [
          allPageNos,
          cluster,
          clusterId,
          currentPage,
          description,
          documentation,
          environmentsList,
          noOfPartitions,
          noOfReplcias,
          showDeleteTopic,
          showEditTopic,
          teamname,
          topicDeletable,
          topicid,
          topicName,
          totalNoPages,
        ]
    TeamNamesGetResponse:
      type: array
      items:
        title: Team name
        type: string
        example: Team A
      example: ["All teams", "Team A", "Team B"]
    Environment:
      type: object
      properties:
        id:
          title: id
          description: Environment identifier
          type: string
          example: "1"
        name:
          title: Name
          description: Environment name
          type: string
          example: DEV
        type:
          title: Type
          description: Environment type
          type: string
          enum: [kafka, kafkaconnect, schema]
        tenantId:
          title: TenantId
          description: Tenant identifier
          type: number
          example: 101
        topicprefix:
          title: Topic prefix
          description: Topic name prefix
          type: string
          nullable: true
          example: "test-"
        topicsuffix:
          title: Topic suffix
          description: Topic name suffix
          type: string
          nullable: true
          example: "-test"
        clusterId:
          title: Cluster identifier
          type: number
          example: 1
        tenantName:
          title: Tenant name
          type: string
          example: default
        clusterName:
          title: Cluster name
          type: string
          example: DEV
        envStatus:
          title: Environment status
          type: string
          enum: [ONLINE, OFFLINE]
          example: ONLINE
        otherParams:
          title: Other parameters
          description: Topic configuration parameters
          type: string
          example: default.partitions=2,max.partitions=2,default.replication.factor=1,max.replication.factor=1,topic.prefix=,topic.suffix
        defaultPartitions:
          title: Default partitions
          type: string
          nullable: true
          example: "1"
        maxPartitions:
          title: Maximum partitions
          type: string
          nullable: true
          example: "2"
        defaultReplicationFactor:
          title: Default replication factor
          type: string
          nullable: true
          example: "1"
        maxReplicationFactor:
          title: Maximum replication factor
          type: string
          nullable: true
          example: "2"
        showDeleteEnv:
          title: Show delete environment
          description: Describes if the user should see environment delete action.
          type: boolean
          example: true
        totalNoPages:
          title: Total number of pages
          type: string
          example: "1"
        allPageNos:
          title: All page numbers
          description: List of all page numbers
          type: array
          items:
            type: string
          example: ["1"]
      required:
        [
          id,
          name,
          type,
          tenantId,
          topicprefix,
          topicsuffix,
          clusterId,
          tenantName,
          clusterName,
          envStatus,
          otherParams,
          defaultPartitions,
          maxPartitions,
          defaultReplicationFactor,
          maxReplicationFactor,
          showDeleteEnv,
          totalNoPages,
          allPageNos,
        ]
    topicAdvancedConfigGetResponse:
      type: object
      title: TopicAdvancedConfigGetResponse
      example:
        CLEANUP_POLICY: cleanup.policy
        COMPRESSION_TYPE: compression.type
        DELETE_RETENTION_MS: delete.retention.ms
        FILE_DELETE_DELAY_MS: file.delete.delay.ms
        FLUSH_MESSAGES: flush.messages
        FLUSH_MS: flush.ms
        FOLLOWER_REPLICATION_THROTTLED_REPLICAS: follower.replication.throttled.replicas
        INDEX_INTERVAL_BYTES: index.interval.bytes
        LEADER_REPLICATION_THROTTLED_REPLICAS: leader.replication.throttled.replicas
        MAX_COMPACTION_LAG_MS: max.compaction.lag.ms
        MAX_MESSAGE_BYTES: max.message.bytes
        MESSAGE_DOWNCONVERSION_ENABLE: message.downconversion.enable
        MESSAGE_FORMAT_VERSION: message.format.version
        MESSAGE_TIMESTAMP_DIFFERENCE_MAX_MS: message.timestamp.difference.max.ms
        MESSAGE_TIMESTAMP_TYPE: message.timestamp.type
        MIN_CLEANABLE_DIRTY_RATIO: min.cleanable.dirty.ratio
        MIN_COMPACTION_LAG_MS: min.compaction.lag.ms
        MIN_INSYNC_REPLICAS: min.insync.replicas
        PREALLOCATE: preallocate
        RETENTION_BYTES: retention.bytes
        RETENTION_MS: retention.ms
        SEGMENT_BYTES: segment.bytes
        SEGMENT_INDEX_BYTES: segment.index.bytes
        SEGMENT_JITTER_MS: segment.jitter.ms
        SEGMENT_MS: segment.ms
        UNCLEAN_LEADER_ELECTION_ENABLE: unclean.leader.election.enable
      additionalProperties:
        title: configuration key
        description: "Options are defined in: https://kafka.apache.org/documentation/#topicconfigs"
        example: cleanup.policy
        type: string
    topicCreateRequest:
      title: TopicCreateRequest
      type: object
      required:
        [
          description,
          environment,
          replicationfactor,
          teamname,
          topicname,
          topicpartitions,
        ]
      properties:
        topicname:
          type: string
          title: Topic name
          description: Kafka Topic name
          example: "topicName"
          pattern: ^[a-zA-Z0-9._-]{3,}$
        environment:
          type: string
        topicpartitions:
          type: integer
          format: int32
          minimum: 1
        teamname:
          title: Team name
          type: string
          pattern: ^[a-zA-z 0-9]*$
          example: Marketing
        remarks:
          title: Remarks
          description: Message for the approval
          type: string
          pattern: ^$|^[a-zA-Z 0-9_.,-]{3,}$
        description:
          title: Description
          type: string
          pattern: ^[a-zA-Z 0-9_.,-]{3,}$
        replicationfactor:
          title: Replication factor
          type: string
          example: "1"
        environmentName:
          title: Environment name
          type: string
          example: DEV
        topicid:
          title: Topic identifier
          description: This identifier is used in Klaw metadata store to ensure uniquenes.
          type: integer
          format: int32
          example: 1010
        advancedTopicConfigEntries:
          type: array
          items:
            type: object
            properties:
              configKey:
                type: string
              configValue:
                type: string
        appname:
          title: App name
          type: string
        topictype:
          title: Topic type
          type: string
          enum:
            - Create
            - Update
            - Delete
            - Claim
        requestor:
          title: Requestor
          type: string
        requesttime:
          title: Request time
          type: string
          format: date-time
          example: 2018-11-13T20:20:39+00:00
        requesttimestring:
          title: Request time string
          type: string
        topicstatus:
          title: Topic status
          type: string
        approver:
          title: Approver
          type: string
        approvingtime:
          title: Approving time
          type: string
          format: date-time
          example: 2018-11-13T20:20:39+00:00
        sequence:
          title: Sequence
          type: string
          deprecated: true
        username:
          title: Username
          example: johndoe
          type: string
        totalNoPages:
          title: Total number of pages
          type: string
          example: "1"
        approvingTeamDetails:
          type: string
        otherParams:
          type: string
        teamId:
          title: Team identifier
          type: integer
          format: int32
          example: 1010
        allPageNos:
          title: All page numbers
          description: List of all page numbers
          type: array
          items:
            type: string
          example: ["1"]
        possibleTeams:
          title: Possible teams
          type: array
          items:
            type: string
            example: [CRM, Sales, Marketing]
        currentPage:
          title: Current page number
          type: string
          example: "1"
