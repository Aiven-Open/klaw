# Uncomment the below SSL/Https Properties to secure this Cluster Api application

#server.ssl.key-store=client.keystore.p12
#server.ssl.trust-store=client.truststore.jks
#server.ssl.key-store-password=klaw1234
#server.ssl.key-password=klaw1234
#server.ssl.trust-store-password=klaw1234
#server.ssl.key-store-type=pkcs12

# Uncomment the below SSL properties to connect to Kafka clusters over SSL.
# Each of the below block can be repeated for a cluster with unique cluster identification id

#clusterid.kafkassl.keystore.location=client.keystore.p12
#clusterid.kafkassl.keystore.pwd=klaw1234
#clusterid.kafkassl.key.pwd=klaw1234
#clusterid.kafkassl.truststore.location=client.truststore.jks
#clusterid.kafkassl.truststore.pwd=klaw1234
#clusterid.kafkassl.keystore.type=pkcs12
#clusterid.kafkassl.truststore.type=JKS

# Uncomment the below SASL properties to connect to Kafka clusters over SASL
# Each of the below block can be repeated for a cluster with unique cluster identification id

#clusterid.kafkasasl.jaasconfig.plain=org.apache.kafka.common.security.plain.PlainLoginModule required username='kwuser' password='kwuser-secret';
#clusterid.kafkasasl.jaasconfig.scram=org.apache.kafka.common.security.scram.ScramLoginModule required username='kwuser' password='kwuser-secret';
#clusterid.kafkasasl.saslmechanism.gssapi.servicename=kafka
#clusterid.kafkasasl.jaasconfig.gssapi=com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/location/kafka_client.keytab" principal="kafkaclient1@EXAMPLE.COM";

# Uncomment the below Schema Registry/karapace HTTPS credentials (Ex : username:password) to connect to SchemaRegistry/Karapace server
# Each of the below block can be repeated for a cluster with unique cluster identification id
#clusterid.klaw.schemaregistry.credentials=

# Uncomment the below Kafka Connect HTTPS credentials (Ex : username:password) to connect to a Kafka connect server
# Each of the below block can be repeated for a cluster with unique cluster identification id
#clusterid.klaw.kafkaconnect.credentials=

# Uncomment the below to establish connectivity between core and cluster apis.
# Provide a base 64 encoded string. The same secret should be configured in Klaw Api. Please change to a new one.
# Ex : dGhpcyBpcyBhIHNlY3JldCB0byBhY2Nlc3MgY2x1c3RlcmFwaQ==
klaw.clusterapi.access.base64.secret=

# Uncomment the below to establish connectivity between Aiven console and Cluster api
# Provide the access token for https requests
# (Currently applicable on Aiven calls only)
klaw.clusters.accesstoken=

# --------------------- Please do not modify the below defaults unless required ---------------------
server.port=9343

# User for accessing Cluster api by Core Api
klaw.clusterapi.access.username=kwclusterapiuser

# this property is required to avoid default password printing to console.
spring.security.user.password=avoid_default_pwd_logging

#kafka consumer group id to read topic contents
#klaw.topiccontents.consumergroup.id=kwgenericconsumergroup
klaw.topiccontents.consumer.poll.interval.ms=2000

klaw.retries.config=10
klaw.retry.backoff.ms=5000
klaw.request.timeout.ms=15000

# default Kafka SASL properties
kafkasasl.saslmechanism.plain=PLAIN
kafkasasl.saslmechanism.gssapi=GSSAPI
kafkasasl.saslmechanism.scram.256=SCRAM-SHA-256
kafkasasl.saslmechanism.scram.512=SCRAM-SHA-512

# swagger documentation path parser
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.banner.location=classpath:banner.txt
# log file settings
logging.file.name=./../logs/kw-clusterapi.log
spring.mvc.log-resolved-exception=true
logging.level.root=info

# Custom Acls - Api Endpoints (Currently applicable on Aiven calls)
klaw.clusters.listacls.api=https://api.aiven.io/v1/project/projectName/service/serviceName/acl
klaw.clusters.addacls.api=https://api.aiven.io/v1/project/projectName/service/serviceName/acl
klaw.clusters.deleteacls.api=https://api.aiven.io/v1/project/projectName/service/serviceName/acl/aclId