Release Notes:

Release 1.1.0

This is a minor release with a couple of features and improvements.

 - Klaw as Maven multi-module project. Modules : 'core' and 'cluster-api'.
   'core' being the main Governance Api.
   'cluster-api' module is cloned from main branch of repo https://github.com/aiven/klaw-cluster-api
 - Introduced new protocols SCRAM SHA 256, SCRAM SHA 512 to Klaw to connect to Kafka clusters
 - Enabled JWT based authentication to connect to Cluster Api
 - Functionality to configure Klaw to connect to multiple kafka clusters with different SSL certificates
 - Improved Api Exception handling
 - Code refactoring and improvements
 - Fix for circular dependency issue
 - Upgraded Spring boot, Kafka and other dependencies
 - Bug fixes

-----------------------------------------------------------------------------------

- Klaw (formerly Kafkawize) Release 1.0.0

- This release is cloned from master branch of https://github.com/muralibasani/kafkawize
- Package renamed to io.aiven.klaw
- Introduced 'kafka flavor' in the configuration of clusters
- Changes to manage Aiven Acls
- All occurences of Kafkawize renamed to Klaw
- Synchronize Aiven kafka acls from cluster to Klaw (for existing Kafka clusters)
- Few code enhancements

-----------------------------------------------------------------------------------

- The below changes are part of release 5.0.3

- ACLs can be added based on Usernames (plain text principals). Ex : alice, john
    On kafka cluster, Producer acls reflects like below for user 'alice' for a topic.
    (principal=User:alice, host=*, operation=WRITE, permissionType=ALLOW)
    (principal=User:alice, host=*, operation=WRITE, permissionType=ALLOW)

-----------------------------------------------------------------------------------
- The below changes are part of release 5.0.2

- Introducing Liquibase for all database migrations
- Recaptcha validation can be disabled if running in saas mode

-----------------------------------------------------------------------------------

- The below changes are part of release 5.0.1

- Now users can request for multiple acls in one request. Earlier it was either one IP address or one principal in one request.
- Minor bug fix

-----------------------------------------------------------------------------------

The below changes are part of release Kafkawize 5.0.0

Total Kafkawize pro code is merged to Opensource version. Includes all the features.

Features:

Topics (approval): Create, Update, Delete, Promote
Acls (approval):  Create
Connectors (approval): Create
Avro Schemas (approval): Create
Topic Overview :
    Topic Config
    Promote
    Literal and Prefixed subscriptions
    Topic documentation
    Consumer offsets/ lag
    View topic contents
View created, completed, declined, all Topic requests
View created, completed, declined, all Acl requests
View created, completed, declined, all Connector requests
View created, completed, declined, all Avro schema requests

Synchronization from and to kafka clusters
Reconciliation and email notifications on differences between Kafkawize and Clusters
Restore configuration (topics, acls)

Login :
    Active directory integration
    Single Sign-on (OAuth2)

Clusters and Environments
    Clusters can be created connecting to Kafka clusters. (Cluster Management Api should be configured)
    Environments are wrappers over clusters, enforcing flexible configs like prefix, suffix etc

Users, Teams & Authorizations
    Configurable users, teams
    More than 35 permissions
    Configurable roles (Roles can be pulled from AD for authorization)

Topic naming conventions
    Enforce prefix and suffixes per environment

Excel report (for your team and all teams, depending on the role)
    Topics per cluster (for teams)
    Partitions per cluster
    Overall topics in all clusters
    Acls per cluster (for teams)
    Producer Acls  (for teams)
    Consumer Acls  (for teams)
    Consumer groups of all environments
    Requests per day

Analytics
    View charts of topics, partitions, acls, requests

Multi tenancy
    Each tenant can manage their topics with their own teams in isolation.
    Every tenant can have their own set of Kafka environments, and users
    of one tenant cannot view/access topics, acls or any from other tenants.
    It provides an isolation avoiding any security breach.

Kafka Connectivity
    PLAINTEXT, SSL, SASL

Audit
    All topic, acl, schema and connector requests

Email notifications when
    requests are created, approved, declined
    users are created, approved

Help Wizard to setup Kafkawize

Documentation : https://klaw-project.io/docs
